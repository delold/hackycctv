{"version":3,"sources":["utils/dataProvider.ts","utils/constants.ts","components/RefreshImg/RefreshImg.tsx","routes/Home/Home.tsx","components/HLSArchive/HLSArchive.tsx","utils/roomClient.ts","utils/useWebRTCRoom.ts","components/PeerView/PeerView.tsx","components/WebRTCLive/WebRTCLive.tsx","utils/vibrateDecorator.ts","components/Scrobber/Scrobber.tsx","routes/Camera/Camera.tsx","App.tsx","index.tsx","routes/Home/Home.module.css","components/Scrobber/Scrobber.module.css","routes/Camera/Camera.module.css"],"names":["provider","createContext","streams","HOST","window","location","hostname","API_URL","concat","COLORS","RefreshImg","_ref","src","props","Object","objectWithoutProperties","_useState","useState","Date","now","_useState2","slicedToArray","session","setSession","ref","useRef","useEffect","current","setInterval","clearInterval","react_default","a","createElement","assign","Home","className","styles","list","dataProvider","Consumer","map","_ref2","index","key","name","react_router_dom","to","item","header","color","style","backgroundColor","length","video","RefreshImg_RefreshImg","alt","HLSArchive","hls","timer","videoRef","_this","handlePlayback","autoplay","play","source","console","log","clearTimeout","Hls","isSupported","pause","destroy","loadSource","attachMedia","on","Events","MANIFEST_PARSED","setTimeout","this","oldProps","autoPlay","muted","playsInline","Component","RoomClient","peerId","forceTcp","stateActions","roomId","classCallCheck","_closed","_forceTcp","_forceH264","_protooUrl","_protoo","_mediasoupDevice","_recvTransport","_consumers","Map","_stateActions","close","setRoomState","protooTransport","protooClient","WebSocketTransport","Peer","_joinRoom","notify","type","text","asyncToGenerator","regenerator_default","mark","_callee","request","accept","_request$data","_peerId","producerId","id","kind","rtpParameters","appData","producerPaused","_consumer","_mediasoupClient$pars","spatialLayers","temporalLayers","wrap","_context","prev","next","t0","method","data","abrupt","consume","objectSpread","consumer","sent","set","delete","mediasoupClient","encodings","scalabilityMode","addConsumer","locallyPaused","remotelyPaused","preferredSpatialLayer","preferredTemporalLayer","codec","codecs","mimeType","split","track","score","stop","_x","_x2","apply","arguments","notification","peer","addPeer","consumers","displayName","removePeer","consumerId","get","removeConsumer","setConsumerPaused","setConsumerResumed","_notification$data","spatialLayer","temporalLayer","setConsumerCurrentLayers","_notification$data2","setConsumerScore","routerRtpCapabilities","load","producing","consuming","transportInfo","iceParameters","iceCandidates","dtlsParameters","createRecvTransport","_ref3","callback","errback","_this2","transportId","then","catch","device","rtpCapabilities","peers","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","done","value","_context3","t1","consumerReducer","state","action","defineProperty","payload","newState","newConsumer","_action$payload","sourceOfEvent","paused","_action$payload2","_action$payload3","peerReducer","_action$payload4","newConsumers","toConsumableArray","newPeer","_action$payload5","idx","indexOf","slice","splice","roomReducer","reducer","roomState","useWebRTCRoom","clientRef","_useReducer","useReducer","_useReducer2","dispatch","randomString","join","PeerView","videoVisible","videoTrack","setVideoCanPlay","_useState3","_useState4","setVideoElemPaused","useLayoutEffect","stream","MediaStream","addTrack","srcObject","oncanplay","onplay","onpause","error","controls","WebRTCLive","room","videoConsumer","find","components_PeerView_PeerView","vibrateDecorator","navigator","vibrate","err","MAX_LENGTH","Scrobber","debounce","interval","timeout","sceneTimer","shift","visible","scenes","onShift","newShift","Math","max","min","setState","ceil","performTick","getMilliseconds","extendOpacity","handleLive","handleShiftRight","handleShiftLeft","handleTimeChange","_value$split$map","Number","parseInt","_value$split$map2","hours","minutes","moment","past","clone","subtract","diff","handleDateChange","seconds","milliseconds","document","addEventListener","removeEventListener","_this$state","date","minRangeRounded","maxRangeRounded","minDate","maxDate","timeline","opacity","btn","circle","back","width","height","viewBox","fill","xmlns","d","center","onClick","time","pill","cover","onChange","e","target","format","calendar","valueAsDate","live","Camera","from","showTools","generateUrl","baseUrl","params","push","handlePause","handleShiftChange","newProps","url","camera","HLSArchive_HLSArchive","Scrobber_Scrobber","onStop","App","setStreams","fetch","json","Provider","react_router","exact","path","component","render","match","Camera_Camera","ReactDOM","src_App","getElementById","module","exports","scrobber","slider","day","position","bubble","button","hidden"],"mappings":"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","file":"static/js/main.429275d2.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst provider = createContext({ streams: [] })\nexport default provider","export const HOST = window.location.hostname\nexport const API_URL = `http://${HOST}`\n\nexport const COLORS = [\n  '#EB5757', '#F2994A', '#F2C94C', '#219653', '#6FCF97', '#2F80ED',\n  '#2D9CDB', '#56CCF2', '#9B51E0'\n]","import React, { useEffect, useState, useRef } from 'react';\nexport const RefreshImg = ({ src, ...props }: {\n  src: string | null;\n  [rest: string]: any;\n}) => {\n  const [session, setSession] = useState(Date.now());\n  const ref = useRef<number>();\n  useEffect(() => {\n    ref.current = window.setInterval(() => {\n      setSession(Date.now());\n    }, 15 * 1000);\n    return () => {\n      window.clearInterval(ref.current);\n    };\n  }, []);\n  return <img src={`${src}?q=${session}`} {...props} />;\n};\n","import React from 'react'\nimport DataProvider from '../../utils/dataProvider'\n\nimport styles from './Home.module.css'\nimport { COLORS, API_URL } from 'utils/constants';\nimport { NavLink } from 'react-router-dom';\nimport { RefreshImg } from '../../components/RefreshImg/RefreshImg';\n\nexport default () => {\n  return (\n    <div>\n      <div className={styles.list}>\n        <DataProvider.Consumer>\n          {({ streams }) => streams.map(({ key, name }, index) => (\n            <NavLink to={`/camera/${key}`}>\n              <article className={styles.item} key={key}>\n                <section className={styles.header}>\n                  <h2 className={styles.name}>{name}</h2>\n                  <span className={styles.color} style={{ backgroundColor: COLORS[index % COLORS.length] }}></span>\n                </section>\n                <div className={styles.video}>\n                  <RefreshImg src={`${API_URL}/frame/${key}`} alt={name} />\n                </div>\n              </article>\n            </NavLink>\n          ))}\n        </DataProvider.Consumer>\n      </div>\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport Hls from 'hls.js'\nimport style from './HLSArchive.module.css'\n\ntype Props = {\n  source: string,\n}\n\nexport default class HLSArchive extends Component<Props> {\n  hls: Hls | null = null\n  timer: number | null  = null\n  ref: HTMLVideoElement | null = null\n\n  componentDidMount() {\n    this.handlePlayback()\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    if (oldProps.source !== this.props.source) {\n      this.handlePlayback()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timer !== null) {\n      clearTimeout(this.timer)\n    }\n\n    if (this.ref) {\n      this.ref.pause()\n    }\n    if (this.hls) {\n      this.hls.destroy()\n    }\n  }\n\n  videoRef = (ref: HTMLVideoElement) => {\n    this.ref = ref\n    this.handlePlayback()\n  }\n\n  autoplay: TimerHandler = () => {\n    if (this.ref) this.ref.play()\n  }\n\n  handlePlayback = () => {\n    const { source } = this.props\n\n    console.log(source)\n\n    if (source && this.ref) {\n      if (this.timer !== null) {\n        clearTimeout(this.timer)\n      }\n      \n      if (Hls.isSupported()) {\n        if (this.hls) {\n          this.ref.pause()\n          this.hls.destroy()\n        }\n\n        this.hls = new Hls()\n        this.hls.loadSource(source)\n        this.hls.attachMedia(this.ref)\n        this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          this.timer = setTimeout(this.autoplay, 300)\n        })\n      } else {\n        this.ref.src = source\n        this.timer = setTimeout(this.autoplay, 300)\n      }\n    }\n  }\n\n  render() {\n    return <video className={style.video} ref={this.videoRef} autoPlay muted playsInline />\n  }\n}\n","import protooClient, { Peer } from 'protoo-client'\nimport { HOST } from './constants'\n\nimport * as mediasoupClient from 'mediasoup-client'\n\n\nexport type RoomConsumer = {\n  id: string,\n  type: string,\n  locallyPaused: boolean,\n  remotelyPaused: boolean,\n  rtpParameters: any,\n  spatialLayers: number,\n  temporalLayers: number,\n  preferredSpatialLayer: number,\n  preferredTemporalLayer: number,\n  codec: string,\n  track: MediaStreamTrack,\n  score: number,\n}\n\nexport type RoomPeer = {\n  id: string,\n  displayName: string,\n  device: object,\n  consumers: string[]\n}\n\ntype StateActions = {\n  notify(payload: { type?: string, text: string }): any,\n  setRoomState(state: string): any,\n  addPeer(peer: RoomPeer): any,\n  removePeer(peerId: string): any,\n  addConsumer(consumer: RoomConsumer, peerId: string): any,\n  removeConsumer(consumerId: string, peerId: string): any,\n  setConsumerPaused(consumerId: string, sourceOfEvent: string): any,\n  setConsumerResumed(consumerId: string, sourceOfEvent: string): any,\n  setConsumerCurrentLayers(consumerId: string, spatialLayer: any, temporalLayer: any): any,\n  setConsumerScore(consumerId: string, score: number): any,\n}\n\nexport default class RoomClient {\n  _closed: Boolean = false\n  _forceTcp: Boolean = false\n  _forceH264: Boolean = false\n  _protooUrl: String\n  _protoo: Peer | null = null\n  _mediasoupDevice: mediasoupClient.Device | null | undefined  = null\n  _recvTransport: mediasoupClient.Transport | null | undefined = null\n  _consumers: Map<String, mediasoupClient.Consumer> = new Map()\n  _stateActions: StateActions\n\n  constructor({\n    peerId,\n    forceTcp,\n    stateActions,\n    roomId,\n  }: {\n    peerId: string,\n    roomId: string,\n    forceTcp: boolean,\n    stateActions: StateActions,\n  }) {\n    this._forceTcp = forceTcp\n    this._stateActions = stateActions\n    this._protooUrl = `ws://${HOST}/?peerId=${peerId}&roomId=${roomId}`\n  }\n\n  close() {\n    if (this._closed)\n      return;\n\n    this._closed = true;\n\n    if (this._protoo) {\n      this._protoo.close();\n    }\n\n    if (this._recvTransport) {\n      this._recvTransport.close();\n    }\n\n    this._stateActions.setRoomState('closed')\n  }\n\n  async join() {\n    const protooTransport = new protooClient.WebSocketTransport(this._protooUrl);\n\n    this._protoo = new protooClient.Peer(protooTransport);\n\n    this._stateActions.setRoomState('connecting')\n\n    this._protoo.on('open', () => this._joinRoom());\n\n    this._protoo.on('failed', () => {\n      this._stateActions.notify({\n        type: 'error',\n        text: 'WebSocket connection failed'\n      });\n    });\n\n    this._protoo.on('disconnected', () => {\n      this._stateActions.notify({\n        type: 'error',\n        text: 'WebSocket disconnected'\n      });\n\n      if (this._recvTransport) {\n        this._recvTransport.close();\n        this._recvTransport = null;\n      }\n\n      this._stateActions.setRoomState('closed')\n    });\n\n    this._protoo.on('close', () => {\n      if (this._closed)\n        return;\n\n      this.close();\n    });\n\n    \n    this._protoo.on('request', async (request: { method: string, data: any }, accept: () => any) => {\n      switch (request.method) {\n        case 'newConsumer': {\n          const {\n            peerId,\n            producerId,\n            id,\n            kind,\n            rtpParameters,\n            type,\n            appData,\n            producerPaused\n          } = request.data;\n\n          if (this._recvTransport == null) return\n          const consumer = await this._recvTransport.consume({\n            id,\n            producerId,\n            kind,\n            rtpParameters,\n            appData: {\n              ...appData,\n              peerId\n            } // Trick.\n          });\n\n          // Store in the map.\n          this._consumers.set(consumer.id, consumer);\n\n          consumer.on('transportclose', () => {\n            this._consumers.delete(consumer.id);\n          });\n\n          const {\n            spatialLayers,\n            temporalLayers\n          } =\n          // @ts-ignore\n          mediasoupClient.parseScalabilityMode(consumer.rtpParameters.encodings[0].scalabilityMode);\n\n          this._stateActions.addConsumer({\n            id: consumer.id,\n            type: type,\n            locallyPaused: false,\n            remotelyPaused: producerPaused,\n            rtpParameters: consumer.rtpParameters,\n            spatialLayers: spatialLayers,\n            temporalLayers: temporalLayers,\n            preferredSpatialLayer: spatialLayers - 1,\n            preferredTemporalLayer: temporalLayers - 1,\n            codec: consumer.rtpParameters.codecs[0].mimeType.split('/')[1],\n            track: consumer.track,\n            score: 0,\n          },\n          peerId)\n\n          // We are ready. Answer the protoo request so the server will\n          // resume this Consumer (which was paused for now).\n          accept();\n\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this._protoo.on('notification', (notification: { method: string, data: any }) => {\n      switch (notification.method) {\n        case 'newPeer': {\n          const peer = notification.data;\n\n          this._stateActions.addPeer({\n            ...peer,\n            consumers: []\n          })\n\n          this._stateActions.notify({\n            text: `${peer.displayName} has joined the room`\n          });\n\n          break;\n        }\n\n        case 'peerClosed': {\n          const {\n            peerId\n          } = notification.data;\n\n          this._stateActions.removePeer(peerId)\n\n          break;\n        }\n\n        case 'consumerClosed': {\n          const {\n            consumerId\n          } = notification.data;\n          const consumer = this._consumers.get(consumerId);\n\n          if (!consumer)\n            break;\n\n          consumer.close();\n          this._consumers.delete(consumerId);\n\n          const {\n            peerId\n          } = consumer.appData;\n\n          this._stateActions.removeConsumer(consumerId, peerId)\n\n          break;\n        }\n\n        case 'consumerPaused': {\n          const {\n            consumerId\n          } = notification.data;\n          const consumer = this._consumers.get(consumerId);\n\n          if (!consumer)\n            break;\n\n          this._stateActions.setConsumerPaused(consumerId, 'remote')\n\n          break;\n        }\n\n        case 'consumerResumed': {\n          const {\n            consumerId\n          } = notification.data;\n          const consumer = this._consumers.get(consumerId);\n\n          if (!consumer)\n            break;\n\n          this._stateActions.setConsumerResumed(consumerId, 'remote')\n\n          break;\n        }\n\n        case 'consumerLayersChanged': {\n          const {\n            consumerId,\n            spatialLayer,\n            temporalLayer\n          } = notification.data;\n          const consumer = this._consumers.get(consumerId);\n\n          if (!consumer)\n            break;\n\n          this._stateActions.setConsumerCurrentLayers(consumerId, spatialLayer, temporalLayer)\n\n          break;\n        }\n\n        case 'consumerScore': {\n          const {\n            consumerId,\n            score\n          } = notification.data;\n\n          this._stateActions.setConsumerScore(consumerId, score)\n\n          break;\n        }\n\n        default: {\n        }\n      }\n    });\n  }\n\n  async _joinRoom() {\n    if (this._protoo == null) return\n    try {\n      this._mediasoupDevice = new mediasoupClient.Device();\n\n      \n      const routerRtpCapabilities =\n        await this._protoo.request('getRouterRtpCapabilities');\n\n      await this._mediasoupDevice.load({\n        routerRtpCapabilities\n      });\n\n      // Create mediasoup Transport for sending (unless we don't want to consume).\n      const transportInfo = await this._protoo.request(\n        'createWebRtcTransport', {\n          forceTcp: this._forceTcp,\n          producing: false,\n          consuming: true\n        });\n\n      const {\n        id,\n        iceParameters,\n        iceCandidates,\n        dtlsParameters\n      } = transportInfo;\n\n      this._recvTransport = this._mediasoupDevice.createRecvTransport({\n        id,\n        iceParameters,\n        iceCandidates,\n        dtlsParameters\n      });\n\n      this._recvTransport.on(\n        'connect', ({\n          dtlsParameters\n        }, callback, errback) => \n        {\n          if (this._protoo && this._recvTransport)\n            this._protoo.request(\n              'connectWebRtcTransport', {\n                transportId: this._recvTransport.id,\n                dtlsParameters\n              })\n            .then(callback)\n            .catch(errback);\n        });\n\n      // Join now into the room.\n      // NOTE: Don't send our RTP capabilities if we don't want to consume.\n      const {\n        peers\n      } = await this._protoo.request(\n        'join', {\n          displayName: \"\",\n          device: {},\n          rtpCapabilities: this._mediasoupDevice.rtpCapabilities\n        });\n\n      this._stateActions.setRoomState('connected');\n\n      this._stateActions.notify({\n        text: 'You are in the room!',\n      });\n\n      for (const peer of peers) {\n        this._stateActions.addPeer({\n          ...peer,\n          consumers: []\n        });\n      }\n    } catch (error) {\n\n      this._stateActions.notify({\n        type: 'error',\n        text: `Could not join the room: ${error}`\n      });\n\n      this.close();\n    }\n  }\n}","import { useEffect, useRef, useReducer } from 'react'\nimport RoomClient, { RoomPeer, RoomConsumer } from './roomClient'\nimport randomString from 'random-string'\n\ntype State = {\n  consumers: {\n    [key: string]: RoomConsumer\n  }\n  peers: {\n    [key: string]: RoomPeer\n  }\n  roomState: string\n}\n\ntype Action = {\n  type: 'SET_ROOM_STATE'\n  payload: string\n} | {\n  type: 'ADD_PEER'\n  payload: RoomPeer\n} | {\n  type: 'REMOVE_PEER'\n  payload: string\n} | {\n  type: 'ADD_CONSUMER'\n  payload: {\n    consumer: RoomConsumer\n    peerId: string\n  }\n} | {\n  type: 'REMOVE_CONSUMER'\n  payload: {\n    consumerId: string\n    peerId: string\n  }\n} | {\n  type: 'SET_CONSUMER_PLAYBACK'\n  payload: {\n    consumerId: string\n    sourceOfEvent: string\n    paused: boolean\n  }\n} | {\n  type: 'SET_CONSUMER_LAYERS'\n  payload: {\n    consumerId: string\n    spatialLayer: any\n    temporalLayer: any\n  }\n} | {\n  type: 'SET_CONSUMER_SCORE'\n  payload: {\n    consumerId: string\n    score: number\n  }\n}\n\nconst consumerReducer = (state: {\n  [key: string]: RoomConsumer\n}, action: Action): {\n  [key: string]: RoomConsumer\n} => {\n  switch (action.type) {\n    case 'ADD_CONSUMER': return { ...state, [action.payload.consumer.id]: action.payload.consumer }\n    case 'REMOVE_CONSUMER': {\n      const newState = { ...state }\n      delete newState[action.payload.consumerId]\n      return newState\n    }\n    case 'SET_CONSUMER_PLAYBACK': {\n      const { consumerId, sourceOfEvent, paused } = action.payload\n      const consumer = state[consumerId]\n      if (!consumer)\n        return state\n      let newConsumer\n      if (sourceOfEvent === 'local') {\n        newConsumer = { ...consumer, locallyPaused: paused }\n      }\n      else {\n        newConsumer = { ...consumer, remotelyPaused: paused }\n      }\n      return { ...state, [consumerId]: newConsumer }\n    }\n    case 'SET_CONSUMER_LAYERS': {\n      const { consumerId, spatialLayer, temporalLayer } = action.payload\n      const consumer = state[consumerId]\n      if (!consumer)\n        return state\n      const newConsumer = {\n        ...consumer, spatialLayer, temporalLayer\n      }\n      return { ...state, [consumerId]: newConsumer }\n    }\n    case 'SET_CONSUMER_SCORE': {\n      const { consumerId, score } = action.payload\n      const consumer = state[consumerId]\n      if (!consumer)\n        return state\n      const newConsumer = { ...consumer, score }\n      return { ...state, [consumerId]: newConsumer }\n    }\n  }\n  return state\n}\n\nconst peerReducer = (state: {\n  [key: string]: RoomPeer\n}, action: Action): {\n  [key: string]: RoomPeer\n} => {\n  switch (action.type) {\n    case 'ADD_PEER': return { ...state, [action.payload.id]: action.payload }\n    case 'REMOVE_PEER': {\n      const newState = { ...state }\n      delete newState[action.payload]\n      return newState\n    }\n    case 'ADD_CONSUMER': {\n      const { consumer, peerId } = action.payload\n      const peer = state[peerId]\n      if (!peer)\n        return state\n      const newConsumers = [...peer.consumers, consumer.id]\n      const newPeer = { ...peer, consumers: newConsumers }\n      return { ...state, [newPeer.id]: newPeer }\n    }\n    case 'REMOVE_CONSUMER': {\n      const { consumerId, peerId } = action.payload\n      const peer = state[peerId]\n      if (!peer)\n        return state\n      const idx = peer.consumers.indexOf(consumerId)\n      if (idx === -1)\n        return state\n      const newConsumers = peer.consumers.slice()\n      newConsumers.splice(idx, 1)\n      const newPeer = { ...peer, consumers: newConsumers }\n      return { ...state, [newPeer.id]: newPeer }\n    }\n  }\n  return state\n}\n\nconst roomReducer = (state: string, action: Action): string => {\n  switch (action.type) {\n    case 'SET_ROOM_STATE': return action.payload\n  }\n  return state\n}\n\nconst reducer = (state: State, action: Action): State => {\n  return {\n    consumers: consumerReducer(state.consumers, action),\n    peers: peerReducer(state.peers, action),\n    roomState: roomReducer(state.roomState, action),\n  }\n}\n\nexport const useWebRTCRoom = (roomId: string) => {\n  const clientRef = useRef<RoomClient>()\n  const [state, dispatch] = useReducer(reducer, { consumers: {}, peers: {}, roomState: \"\" })\n  useEffect(() => {\n    clientRef.current = new RoomClient({\n      peerId: randomString({ length: 8 }),\n      roomId,\n      forceTcp: false,\n      stateActions: {\n        notify(payload: {\n          type?: string\n          text: string\n        }): any {\n          console.log(payload)\n        },\n        setRoomState: (state) => dispatch({ type: 'SET_ROOM_STATE', payload: state }),\n        addPeer: (peer) => dispatch({ type: 'ADD_PEER', payload: peer }),\n        removePeer: (peerId) => dispatch({ type: 'REMOVE_PEER', payload: peerId }),\n        addConsumer: (consumer, peerId) => dispatch({ type: 'ADD_CONSUMER', payload: { consumer, peerId } }),\n        removeConsumer: (consumerId, peerId) => dispatch({ type: 'REMOVE_CONSUMER', payload: { consumerId, peerId } }),\n        setConsumerPaused: (consumerId, sourceOfEvent) => dispatch({ type: 'SET_CONSUMER_PLAYBACK', payload: { consumerId, sourceOfEvent, paused: true } }),\n        setConsumerResumed: (consumerId, sourceOfEvent) => dispatch({ type: 'SET_CONSUMER_PLAYBACK', payload: { consumerId, sourceOfEvent, paused: false } }),\n        setConsumerCurrentLayers: (consumerId, spatialLayer, temporalLayer) => dispatch({ type: 'SET_CONSUMER_LAYERS', payload: { consumerId, spatialLayer, temporalLayer } }),\n        setConsumerScore: (consumerId, score) => dispatch({ type: 'SET_CONSUMER_SCORE', payload: { consumerId, score } })\n      }\n    })\n    clientRef.current.join()\n    return () => {\n      if (clientRef.current) {\n        clientRef.current.close()\n      }\n    }\n  }, [roomId])\n\n\n  return state\n}\n\nexport default useWebRTCRoom","import React, { useState, useLayoutEffect, useRef } from 'react'\n\ntype Props = {\n  videoVisible: boolean,\n  videoTrack: MediaStreamTrack | null,\n}\n\nconst PeerView = ({\n  videoVisible,\n  videoTrack,\n}: Props) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n\n  const [videoCanPlay, setVideoCanPlay] = useState(false) \n  const [videoElemPaused, setVideoElemPaused] = useState(false)\n\n  useLayoutEffect(() => {\n    if (videoRef.current != null && videoTrack != null) {\n      const stream = new MediaStream()\n      stream.addTrack(videoTrack)\n      videoRef.current.srcObject = stream\n\n      videoRef.current.oncanplay = () => setVideoCanPlay(true)\n      videoRef.current.onplay = () => setVideoElemPaused(false)\n\t\t\tvideoRef.current.onpause = () => setVideoElemPaused(true)\n\n\t\t\tvideoRef.current.play().catch((error) => console.error(error))\n    }\n\n    return () => {\n      if (videoRef.current) {\n        videoRef.current.oncanplay = null\n        videoRef.current.onplay = null\n        videoRef.current.onpause = null\n      }\n    }\n\n  }, [videoTrack])\n\n  return (\n    <video ref={videoRef} autoPlay muted controls={false} />\n  )\n}\n\nexport default PeerView","import React from 'react'\nimport useWebRTCRoom from '../../utils/useWebRTCRoom'\nimport PeerView from '../../components/PeerView/PeerView'\n\nexport default ({ room }: { room: string }) => {\n  const state = useWebRTCRoom(room)\n  const peer = state.peers[room]\n  \n  if (!peer) return null\n  \n  const consumerList = peer.consumers.map(consumerId => state.consumers[consumerId])\n  const videoConsumer = consumerList.find((consumer) => consumer.track.kind === 'video')\n\n  const videoVisible = (\n    videoConsumer &&\n    !videoConsumer.locallyPaused &&\n    !videoConsumer.remotelyPaused &&\n    videoConsumer.score < 5\n  )\n\n  return <PeerView\n    videoTrack={videoConsumer ? videoConsumer.track : null}\n    videoVisible={!!videoVisible}\n  />\n}","export const vibrateDecorator = (callback: (...args: any) => any) => {\n\treturn (...args: any): any => {\n\t\ttry {\n\t\t\tnavigator.vibrate(200);\n\t\t}\n\t\tcatch (err) { }\n\t\treturn callback(...args);\n\t};\n};\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport moment from 'moment'\n\nimport { vibrateDecorator } from '../../utils/vibrateDecorator'\nimport styles from './Scrobber.module.css'\n\ntype Scene = {\n  timestamp: number,\n  scene: number,\n}\n\ntype Props = {\n\tonShift: (shift: number) => void,\n  onStop: () => void,\n  name: string,\n}\n\ntype State = {\n\tshift: number,\n  current: number,\n  visible: boolean,\n  scenes: Scene[]\n}\n\nconst DAY_LENGTH = 24 * 60 * 60 * 1000\nconst MAX_LENGTH = 7 * DAY_LENGTH\n\nexport default class Scrobber extends Component<Props, State> {\n  debounce: number | null = null\n  interval: number | null = null\n  timeout: number | null = null\n  sceneTimer: number | null = null\n  timer: number | null = null\n  ref: HTMLDivElement | null = null\n\n\tstate = {\n\t\tshift: 0,\n\t\tcurrent: Date.now(),\n\t\tvisible: true,\n\t\tscenes: [],\n\t}\n\n\tonShift = (newShift: number) => {\n\t\tconst shift = Math.max(0, Math.min(MAX_LENGTH, newShift))\n\t\tthis.setState({ shift })\n    this.props.onShift(Math.ceil(shift / 1000))\n\t}\n\n\tperformTick = () => {\n\t\tif (!this.interval) {\n\t\t\tthis.interval = 0\n\t\t}\n\t\t\n\t\tconst current = Date.now()\n    this.setState({ current })\n    \n    if (this.timer !== null) {\n      clearTimeout(this.timer)\n    }\n\n    const callback: TimerHandler = this.performTick\n\t\tthis.timer = setTimeout(callback, Math.max(1000 - new Date(current).getMilliseconds(), 0))\n\t}\n\n\textendOpacity = () => {\n    this.setState({ visible: true })\n    \n    if (this.timeout) {\n      clearTimeout(this.timeout)\n    }\n\n    const callback: TimerHandler = () => this.setState({ visible: false })\n\t\tthis.timeout = setTimeout(callback, 8000)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.extendOpacity()\n\t\tdocument.addEventListener('touchstart', this.extendOpacity)\n\t\tdocument.addEventListener('mousedown', this.extendOpacity)\n\t\tdocument.addEventListener('mousemove', this.extendOpacity)\n\t\t\n\t\tthis.performTick()\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.extendOpacity)\n\n\t\tif (this.timer) clearTimeout(this.timer)\n\t\tif (this.debounce) clearTimeout(this.debounce)\n\t\tif (this.timeout) clearTimeout(this.timeout)\n\t\tif (this.sceneTimer) clearTimeout(this.sceneTimer)\n\t}\n\n\thandleLive = vibrateDecorator(() => this.onShift(0))\n\thandleShiftRight = vibrateDecorator(() => this.onShift(this.state.shift + 30000))\n\thandleShiftLeft = vibrateDecorator(() => this.onShift(this.state.shift - 30000))\n\n\thandleTimeChange = (value: string) => {\n\t\tconst [hours, minutes] = value.split(':').map(item => Number.parseInt(item, 10))\n\t\t\n\t\tconst now = moment()\n\t\tconst past = now.clone().subtract(this.state.shift, 'milliseconds')\n\t\t\t.hours(hours)\n\t\t\t.minutes(minutes)\n\n\t\tthis.onShift(now.diff(past))\n\t}\n\t\n\thandleDateChange = (value: Date | null) => {\n\t\tif (!value) return\n\t\tconst now = moment()\n\t\tconst ref = moment().subtract(this.state.shift, 'milliseconds')\n\t\tconst past = moment(value)\n\t\t\t.hours(ref.hours())\n\t\t\t.minutes(ref.minutes())\n\t\t\t.seconds(ref.seconds())\n\t\t\t.milliseconds(ref.milliseconds())\n\n\t\tthis.onShift(now.diff(past))\n\t}\n\n\trender() {\n\t\tconst { current, shift, visible } = this.state\n\t\tconst date = moment(new Date(current - shift))\n\n\t\tlet minRangeRounded = current - MAX_LENGTH\n\t\tminRangeRounded -= minRangeRounded % (60 * 1000)\n\n\t\tlet maxRangeRounded = current\n\t\tmaxRangeRounded += (60 * 1000) - maxRangeRounded % (60 * 1000)\n\n\t\tconst minDate = moment(new Date(minRangeRounded))\n\t\tconst maxDate = moment(new Date(maxRangeRounded))\n\n\t\treturn (\n\t\t\t<div className={styles.timeline} style={{ opacity: visible ? 1 : 0 }}>\n\t\t\t\t<NavLink to=\"/\">\n\t\t\t\t\t<a className={[styles.btn, styles.circle, styles.back].join(' ')}>\n\t\t\t\t\t\t<svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path d=\"M21 9.17424V11.8258H5.09091L12.3826 19.1174L10.5 21L0 10.5L10.5 0L12.3826 1.88258L5.09091 9.17424H21Z\" fill=\"currentColor\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t</NavLink>\n\n\t\t\t\t<div className={styles.center}>\n\t\t\t\t\t<button className={[styles.btn, styles.circle, styles.shift].join(' ')} onClick={this.handleShiftLeft}>\n\t\t\t\t\t\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path d=\"M16 0H13V14H16V0ZM11 0L0 7L11 14V0ZM21 0H18V14H21V0Z\" fill=\"currentColor\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<div className={[styles.time, styles.btn, styles.pill].join(' ')}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={styles.cover}\n\t\t\t\t\t\t\tonChange={(e) => this.handleTimeChange(e.target.value)}\n\t\t\t\t\t\t\tvalue={date.format('HH:mm')}\n\t\t\t\t\t\t\tmin={minDate.format('HH:mm')}\n\t\t\t\t\t\t\tmax={maxDate.format('HH:mm')}\n\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{date.format('HH:mm:ss')}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={[styles.calendar, styles.btn, styles.pill].join(' ')}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={styles.cover}\n\t\t\t\t\t\t\tonChange={(e) => this.handleDateChange(e.target.valueAsDate)}\n\t\t\t\t\t\t\tvalue={date.format('YYYY-MM-DD')}\n\t\t\t\t\t\t\tmin={minDate.format('YYYY-MM-DD')}\n\t\t\t\t\t\t\tmax={maxDate.format('YYYY-MM-DD')}\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{date.format('DD. MMMM YYYY')}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button className={[styles.btn, styles.circle, styles.shift].join(' ')} onClick={this.handleShiftRight}>\n\t\t\t\t\t\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path d=\"M5 0H8V14H5V0ZM10 0L21 7L10 14V0ZM0 0H3V14H0V0Z\" fill=\"currentColor\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<button className={[styles.btn, styles.pill, styles.live].join(' ')} onClick={this.handleLive}>\n\t\t\t\t\t<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t<path d=\"M25.4983 10.3367H15.8933L19.7749 6.34167C15.9074 2.51667 9.64578 2.375 5.77828 6.2C1.91078 10.0392 1.91078 16.23 5.77828 20.0833C9.64578 23.9083 15.9074 23.9083 19.7749 20.0833C21.7016 18.1708 22.6649 15.9467 22.6649 13.1417H25.4983C25.4983 15.9467 24.2516 19.5875 21.7583 22.0525C16.7858 26.9825 8.71078 26.9825 3.73828 22.0525C-1.22006 17.1367 -1.26256 9.14667 3.70994 4.23083C8.68244 -0.685 16.6583 -0.685 21.6308 4.23083L25.4983 0.25V10.3367ZM13.4566 7.33333V13.3542L18.4149 16.3008L17.3949 18.015L11.3316 14.4167V7.33333H13.4566Z\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span>Živý přenos</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from 'react'\n\nimport styles from './Camera.module.css'\nimport Dvr from '../../components/HLSArchive/HLSArchive'\nimport WebRTCLive from '../../components/WebRTCLive/WebRTCLive'\nimport Scrobber from '../../components/Scrobber/Scrobber'\n\nimport { API_URL } from '../../utils/constants'\n\ntype Props = {\n  name: string,\n  streams: {\n    port: number,\n    name: string,\n    key: string,\n  }[],\n}\n\n\ntype State = {\n  from: number,\n  to: number,\n  shift: number,\n  showTools: boolean,\n}\n\nexport default class Camera extends Component<Props, State> {\n  state: State = {\n    from: 0,\n    to: 0,\n    shift: 0,\n    showTools: false,\n  }\n  \n  generateUrl = ({ name, from, to, shift }: { name: string, from: number, to: number, shift: number }): string | null => {\n    if (!shift && !from && !to) return null\n    \n    let baseUrl = `${API_URL}/data/${name}/`\n    let type = 'stream.m3u8'\n\n    let params = []\n    if (from > 0) {\n      type = 'slice.m3u8'\n      params.push(`from=${from}`)\n\n      if (to > 0 && from < to) {\n        params.push(`to=${to}`)\n      }\n    } else if (shift > 0) {\n      params.push(`shift=${shift}`)\n    }\n\n    baseUrl += type\n    if (params.length > 0) {\n      baseUrl += '?' + params.join('&')\n    }\n\n    return baseUrl\n  }\n\n  componentWillUpdate(newProps: Props) {\n    if (this.props.name !== newProps.name) {\n      this.setState({ from: 0, to: 0, shift: 0 })\n    }\n  }\n\n  handlePause = () => {\n    console.log('handling pause')\n  }\n\n  handleShiftChange = (shift: number) => {\n    console.log(shift)\n    this.setState({ shift })\n  }\n\n  render() {\n    const { name } = this.props\n    const { from, to, shift } = this.state\n    const url = this.generateUrl({ name, from, to, shift })\n\n    return (\n      <div className={styles.camera}>\n        { url && <Dvr source={url} /> }\n        { !url && <WebRTCLive room={name} /> }\n        <Scrobber onShift={this.handleShiftChange} onStop={this.handlePause} name={name} />\n      </div>\n    )\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, RouteComponentProps } from 'react-router-dom'\n\nimport Home from './routes/Home/Home'\nimport Camera from './routes/Camera/Camera'\n\nimport { API_URL } from './utils/constants'\nimport DataContext from './utils/dataProvider'\n\n\nconst App = () => {\n\tconst [streams, setStreams] = useState([])\n\t\t\n\tuseEffect(() => {\n\t\tfetch(`${API_URL}/streams`).then((a) => a.json()).then(({ data }) => setStreams(data))\n\t}, [])\n\n\treturn (\n\t\t<Router>\n\t\t\t<DataContext.Provider value={{ streams }}>\n\t\t\t\t<div id=\"app\">\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route path=\"/camera/:name\" render={({ match }: RouteComponentProps<{ name: string }>) => (<Camera name={match.params.name} streams={streams} />)} />\n\t\t\t\t</div>\n\t\t\t</DataContext.Provider>\n\t\t</Router>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Home_item__3_9-t\",\"header\":\"Home_header__1cvOG\",\"color\":\"Home_color__2wZyx\",\"name\":\"Home_name__3Iefo\",\"video\":\"Home_video__1gDoR\",\"list\":\"Home_list__3d3Sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeline\":\"Scrobber_timeline__2QMUb\",\"center\":\"Scrobber_center__2D-Wn\",\"btn\":\"Scrobber_btn__31J1y\",\"pill\":\"Scrobber_pill__14uw5\",\"cover\":\"Scrobber_cover__2NmWk\",\"live\":\"Scrobber_live__3QIzt\",\"circle\":\"Scrobber_circle__-tYcj\",\"scrobber\":\"Scrobber_scrobber__13cT7\",\"slider\":\"Scrobber_slider__2qtzj\",\"day\":\"Scrobber_day__3V_gH\",\"position\":\"Scrobber_position__21tsl\",\"bubble\":\"Scrobber_bubble__1Z5Vj\",\"button\":\"Scrobber_button__2QFrl\",\"hidden\":\"Scrobber_hidden__3BlCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"camera\":\"Camera_camera__3V3EP\"};"],"sourceRoot":""}