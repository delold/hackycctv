{"version":3,"sources":["routes/Home/Home.module.css","components/Scrobber/Scrobber.module.css","utils/dataProvider.ts","utils/constants.ts","components/RefreshImg.tsx","routes/Home/Home.tsx","components/HLSPlayer.tsx","utils/vibrateDecorator.ts","components/Slider.tsx","components/Scrobber/Scrobber.tsx","routes/Camera/Camera.tsx","App.tsx","index.tsx"],"names":["module","exports","provider","createContext","streams","HOST","window","localStorage","getItem","location","hostname","API_URL","COLORS","MAX_LENGTH","RefreshImg","src","alt","props","useState","Date","now","session","setSession","visible","setVisible","useEffect","interval","setInterval","clearInterval","onLoad","onError","style","opacity","transition","Home","className","styles","list","Consumer","map","key","name","color","to","item","header","headerContent","backgroundColor","video","HLSPlayer","ref","useRef","timer","hls","videoRef","current","source","Hls","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","setTimeout","play","clearTimeout","pause","destroy","autoPlay","muted","playsInline","vibrateDecorator","callback","navigator","vibrate","err","args","Slider","callbackRef","onDrag","onDragEnd","onWheel","onWheelEnd","canvasRef","bind","useGesture","event","call","useLayoutEffect","animationId","valueOffset","Math","floor","value","userOffset","draw","canvas","parentElement","ctx","getContext","parentRect","getBoundingClientRect","width","height","shift","moment","shiftedNow","clone","add","startDayX","min","diff","startOf","xFrom","xTo","viewOffset","lineWidth","strokeStyle","beginPath","moveTo","max","lineTo","closePath","stroke","drawLine","endOf","drawDayBoundedLine","onScroll","onScrollEnd","handleScroll","delta","handleScrollEnd","tick","requestAnimationFrame","cancelAnimationFrame","css","formatTime","time","absTime","abs","seconds","minutes","hours","days","result","unshift","toFixed","padStart","sign","join","Scrobber","setCurrent","nextTimer","getMilliseconds","useTimer","scrollShift","setScrollShift","delay","show","hide","useVisibleTimer","callbacks","onChange","commitShift","newShift","sliderChange","timeChange","newValue","split","Number","parseInt","past","subtract","dateChange","milliseconds","contentShift","date","minRangeRounded","maxRangeRounded","minDate","maxDate","main","onTouchStart","onMouseMove","top","back","viewBox","fill","xmlns","d","info","stream","timeline","center","timewrapper","onClick","timeoffset","live","pill","margin","cover","e","target","format","type","valueAsDate","calendar","Camera","state","from","showTools","generateUrl","baseUrl","params","push","ceil","length","newProps","this","setState","url","find","Component","App","setStreams","fetch","then","a","json","data","index","Provider","id","exact","path","component","render","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f1ad28ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Home_heading__X9S2V\",\"item\":\"Home_item__1BfZ_\",\"header\":\"Home_header__2ZfpZ\",\"headerContent\":\"Home_headerContent__X_p_L\",\"color\":\"Home_color__mpilC\",\"name\":\"Home_name__1YdXf\",\"video\":\"Home_video__1Zmyl\",\"list\":\"Home_list__3jIXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Scrobber_main__2LuF3\",\"timeline\":\"Scrobber_timeline__2jotj\",\"center\":\"Scrobber_center__3yVBq\",\"timewrapper\":\"Scrobber_timewrapper__2nkoy\",\"timeoffset\":\"Scrobber_timeoffset__29YLh\",\"live\":\"Scrobber_live__38HNF\",\"pill\":\"Scrobber_pill__1rtDH\",\"margin\":\"Scrobber_margin__2S6hy\",\"cover\":\"Scrobber_cover__3LxDf\",\"time\":\"Scrobber_time__32A7e\",\"calendar\":\"Scrobber_calendar__B20XD\",\"top\":\"Scrobber_top__3RLJx\",\"back\":\"Scrobber_back__36HQY\",\"info\":\"Scrobber_info__ZStHx\",\"name\":\"Scrobber_name__33Nnb\",\"color\":\"Scrobber_color__2b0sF\"};","import { createContext } from \"react\"\n\nconst provider = createContext({ streams: [] })\nexport default provider\n","const HOST = window.localStorage.getItem(\"host\") || window.location.hostname\nconst PORT = 80\n\nexport const API_URL = `http://${HOST}:${PORT}`\nexport const COLORS = [\n  \"#EB5757\",\n  \"#F2994A\",\n  \"#F2C94C\",\n  \"#219653\",\n  \"#6FCF97\",\n  \"#2F80ED\",\n  \"#2D9CDB\",\n  \"#56CCF2\",\n  \"#9B51E0\",\n]\n\nexport const MAX_LENGTH = 7 * 24 * 60 * 60\n","import { useEffect, useState } from \"react\"\n\nexport function RefreshImg({\n  src,\n  alt,\n  ...props\n}: {\n  src: string | null\n  [rest: string]: any\n}) {\n  const [session, setSession] = useState(Date.now())\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    const interval = window.setInterval(\n      () => void setSession(Date.now()),\n      15 * 1000\n    )\n    return () => void window.clearInterval(interval)\n  }, [])\n\n  return (\n    <img\n      src={`${src}?q=${session}`}\n      alt={alt}\n      onLoad={() => setVisible(true)}\n      onError={() => setVisible(false)}\n      style={{ opacity: visible ? 1 : 0, transition: \"all 0.3s\" }}\n      {...props}\n    />\n  )\n}\n","import React from \"react\"\nimport DataProvider from \"../../utils/dataProvider\"\n\nimport styles from \"./Home.module.css\"\nimport { API_URL } from \"utils/constants\"\nimport { NavLink } from \"react-router-dom\"\nimport { RefreshImg } from \"../../components/RefreshImg\"\n\nexport default function Home() {\n  return (\n    <div>\n      <div className={styles.list}>\n        <DataProvider.Consumer>\n          {({ streams }) =>\n            streams.map(({ key, name, color }) => (\n              <NavLink to={`/camera/${key}`} className={styles.item}>\n                <section className={styles.header}>\n                  <div className={styles.headerContent}>\n                    <h2 className={styles.name}>{name}</h2>\n                    <span\n                      className={styles.color}\n                      style={{ backgroundColor: color }}\n                    ></span>\n                  </div>\n                </section>\n                <div className={styles.video}>\n                  <RefreshImg src={`${API_URL}/frame/${key}`} alt={name} />\n                </div>\n              </NavLink>\n            ))\n          }\n        </DataProvider.Consumer>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useRef } from \"react\"\nimport Hls from \"hls.js\"\n\nexport function HLSPlayer(props: { source: string }) {\n  const ref = useRef<HTMLVideoElement | null>(null)\n\n  useEffect(() => {\n    let timer: number\n    let videoRef = ref.current\n    let hls: Hls | undefined\n\n    if (props.source && videoRef) {\n      if (Hls.isSupported()) {\n        hls = new Hls()\n        hls.loadSource(props.source)\n        hls.attachMedia(videoRef)\n        hls.on(Hls.Events.MANIFEST_PARSED, () => {\n          timer = window.setTimeout(() => void videoRef?.play(), 300)\n        })\n      } else {\n        videoRef.src = props.source\n        timer = window.setTimeout(() => void videoRef?.play(), 300)\n      }\n    }\n\n    return () => {\n      clearTimeout(timer)\n      videoRef?.pause?.()\n      hls?.destroy?.()\n    }\n  }, [props.source])\n\n  return <video ref={ref} autoPlay muted playsInline />\n}","export const vibrateDecorator = (callback: ((...args: any) => any) | undefined | null) => {\n  if (!callback) return undefined\n  return (...args: any): any => {\n    try {\n      navigator.vibrate(200)\n    } catch (err) { }\n    return callback?.(...args)\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\"\nimport { useRef, useLayoutEffect } from \"react\"\nimport moment from \"moment\"\nimport { useGesture, GestureHandlersPartial } from \"react-use-gesture\"\n\nimport { MAX_LENGTH } from \"utils/constants\"\n\nexport const Slider = (props: {\n  value: number\n  color: string\n  onScroll?: (shift: number) => any\n  onScrollEnd?: (shift: number) => any\n}) => {\n  const callbackRef = useRef<GestureHandlersPartial>({\n    onDrag: () => {},\n    onDragEnd: () => {},\n    onWheel: () => {},\n    onWheelEnd: () => {},\n  })\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const bind = useGesture({\n    onWheel: (event) => {\n      callbackRef.current.onWheel?.(event)\n    },\n    onWheelEnd: (event: any) => {\n      callbackRef.current.onWheelEnd?.(event)\n    },\n    onDrag: (event) => {\n      callbackRef.current.onDrag?.(event)\n    },\n    onDragEnd: (event: any) => {\n      callbackRef.current.onDragEnd?.(event)\n    },\n  })\n\n  useLayoutEffect(() => {\n    let animationId: number\n    // the idea: we don't need to specify the day, it should be resolved by itself.\n    // just make sure we don't draw outside the canvas\n\n    // offset of the slider caused by value\n    const valueOffset = -Math.floor(props.value / 1000)\n\n    // offset set temporarily during scrolling\n    let userOffset = 0\n\n    const draw = (canvas: HTMLCanvasElement | null) => {\n      if (!canvas || !canvas.parentElement) return\n      const ctx = canvas.getContext(\"2d\")\n      if (!ctx) return\n\n      const parentRect = canvas.parentElement.getBoundingClientRect()\n      canvas.width = parentRect.width\n      canvas.height = parentRect.height\n\n      // draws the line, receving arguments as px, not relative to time\n      const drawLine = (xFrom: number, xTo: number, viewOffset: number = 0) => {\n        const { width, height } = canvas.getBoundingClientRect()\n\n        ctx.lineWidth = 10\n        ctx.strokeStyle = props.color\n\n        ctx.beginPath()\n        ctx.moveTo(Math.min(width, Math.max(0, xFrom + viewOffset)), height / 2)\n        ctx.lineTo(Math.min(width, Math.max(0, xTo + viewOffset)), height / 2)\n        ctx.closePath()\n        ctx.stroke()\n      }\n\n      // hide progress bar when necessary\n      const drawDayBoundedLine = (shift: number) => {\n        const { width } = canvas.getBoundingClientRect()\n\n        const now = moment()\n        const shiftedNow = now.clone().add(shift, \"seconds\")\n        const startDayX = Math.min(\n          MAX_LENGTH,\n          now.diff(shiftedNow.clone().startOf(\"day\"), \"second\")\n        )\n        const endDayX = Math.max(\n          0,\n          now.diff(shiftedNow.clone().endOf(\"day\"), \"second\")\n        )\n\n        // invert direction, as we want to line to act as a timeline\n        drawLine(-(endDayX + shift), -(startDayX + shift), width / 2)\n      }\n\n      drawDayBoundedLine(valueOffset + userOffset)\n    }\n\n    const tick = () => {\n      draw(canvasRef.current)\n      animationId = window.requestAnimationFrame(tick)\n    }\n\n    const onScroll = props.onScroll\n    const onScrollEnd = props.onScrollEnd\n\n    const handleScroll = (delta: number) => {\n      userOffset = delta\n\n      // limit userOffset to be in range of <-MAX_LENGTH_IN_SECONDS, 0>, as userOffset is negative in nature\n      // (valueOffset + userOffset) <= 0 && (valueOffset + userOffset) >= -MAX_LENGTH_IN_SECONDS\n      userOffset = Math.min(\n        -valueOffset,\n        Math.max(-MAX_LENGTH - valueOffset, userOffset)\n      )\n\n      // onScroll assumes offset in ms\n      onScroll?.(-(valueOffset + userOffset) * 1000)\n    }\n\n    const handleScrollEnd = () => {\n      onScrollEnd?.(-(valueOffset + userOffset) * 1000)\n    }\n\n    callbackRef.current = {\n      onDrag: (event) => handleScroll(-event.delta[0]),\n      onWheel: (event: any) => handleScroll(event.delta[0] || -event.delta[1]),\n      onDragEnd: () => handleScrollEnd(),\n      onWheelEnd: () => handleScrollEnd(),\n    }\n\n    tick()\n\n    return () => {\n      if (animationId) window.cancelAnimationFrame(animationId)\n    }\n  }, [props.value, props.color, props.onScrollEnd, props.onScroll])\n\n  return (\n    <div\n      css={css`\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        cursor: all-scroll;\n\n        height: 5em;\n      `}\n    >\n      <canvas\n        css={css`\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          left: 0;\n          right: 0;\n        `}\n        ref={canvasRef}\n        height={100}\n        {...bind()}\n      />\n    </div>\n  )\n}\n\nexport default Slider\n","import React, { useRef, useLayoutEffect, useState, useEffect } from \"react\"\nimport moment from \"moment\"\n\nimport styles from \"./Scrobber.module.css\"\nimport { NavLink } from \"react-router-dom\"\n\nimport { MAX_LENGTH } from \"utils/constants\"\nimport { vibrateDecorator } from \"utils/vibrateDecorator\"\nimport { Slider } from \"components/Slider\"\n\nconst formatTime = (time: number) => {\n  const absTime = Math.abs(time)\n\n  const seconds = Math.floor(absTime / 1000) % 60\n  const minutes = Math.floor(absTime / 1000 / 60) % 60\n  const hours = Math.floor(absTime / 1000 / 60 / 60) % 24\n  const days = Math.floor(absTime / 1000 / 60 / 60 / 24)\n\n  let result = []\n  if (seconds > 0 || minutes > 0 || hours > 0) {\n    result.unshift(`${seconds.toFixed(0).padStart(2, \"0\")}s`)\n  }\n\n  if (minutes > 0 || hours > 0) {\n    result.unshift(`${minutes.toFixed(0).padStart(2, \"0\")}m`)\n  }\n  if (hours > 0) {\n    result.unshift(`${hours.toFixed(0).padStart(2, \"0\")}h`)\n  }\n\n  if (days > 0) {\n    result.unshift(`${days}d`)\n  }\n\n  return `${Math.sign(time) < 0 ? \"-\" : \"\"}${result.join(\" \")}`\n}\n\nconst useTimer = () => {\n  const [current, setCurrent] = useState(Date.now())\n  useLayoutEffect(() => {\n    let timer: number\n\n    const tick = () => {\n      const now = Date.now()\n      const nextTimer = Math.max(1000 - new Date(now).getMilliseconds(), 0)\n      setCurrent(now)\n\n      window.clearTimeout(timer)\n      timer = window.setTimeout(tick, nextTimer)\n    }\n    tick()\n\n    return () => void window.clearTimeout(timer)\n  }, [])\n\n  return current\n}\n\nconst useVisibleTimer = (delay = 1000) => {\n  const [visible, setVisible] = useState(true)\n  const show = useRef<() => void>(() => setVisible(true))\n  const hide = useRef<() => void>(() => setVisible(false))\n\n  useEffect(() => {\n    let timer: number\n\n    hide.current = () => {\n      window.clearTimeout(timer)\n      setVisible(false)\n    }\n\n    show.current = () => {\n      window.clearTimeout(timer)\n      setVisible(true)\n      timer = window.setTimeout(hide.current, delay)\n    }\n\n    show.current()\n\n    return () => void window.clearTimeout(timer)\n  }, [delay])\n\n  return { visible, show, hide }\n}\n\nexport function Scrobber(props: {\n  onChange: (shift: number) => void\n  value: number\n  stream: {\n    key: string\n    name: string\n    color: string\n  }\n}) {\n  const current = useTimer()\n  const [scrollShift, setScrollShift] = useState<number | null>(null)\n  const { visible, show } = useVisibleTimer(10 * 1000)\n\n  const callbacks = useRef<{\n    sliderChange?: ((shift: number) => void) | undefined\n    timeChange?: ((value: string) => void) | undefined\n    dateChange?: ((value: Date | null) => void) | undefined\n  }>({})\n\n  useEffect(() => {\n    const onChange = props.onChange\n    const value = props.value\n\n    function commitShift(newShift: number) {\n      setScrollShift(null)\n      onChange(Math.max(0, Math.min(MAX_LENGTH * 1000, newShift)))\n    }\n\n    callbacks.current.sliderChange = vibrateDecorator(commitShift)\n\n    callbacks.current.timeChange = vibrateDecorator((newValue: string) => {\n      const [hours, minutes] = newValue\n        .split(\":\")\n        .map((item) => Number.parseInt(item, 10))\n      const now = moment()\n      const past = now\n        .clone()\n        .subtract(value, \"milliseconds\")\n        .hours(hours)\n        .minutes(minutes)\n\n      commitShift?.(now.diff(past))\n    })\n\n    callbacks.current.dateChange = vibrateDecorator((newValue: Date | null) => {\n      if (!newValue) return\n      const now = moment()\n      const ref = moment().subtract(value, \"milliseconds\")\n      const past = moment(newValue)\n        .hours(ref.hours())\n        .minutes(ref.minutes())\n        .seconds(ref.seconds())\n        .milliseconds(ref.milliseconds())\n\n      commitShift?.(now.diff(past))\n    })\n  }, [props.value, props.onChange])\n\n  const contentShift = scrollShift != null ? scrollShift : props.value\n  const date = moment(new Date(current - contentShift))\n\n  let minRangeRounded = current - MAX_LENGTH * 1000\n  minRangeRounded -= minRangeRounded % (60 * 1000)\n\n  let maxRangeRounded = current\n  maxRangeRounded += 60 * 1000 - (maxRangeRounded % (60 * 1000))\n\n  const minDate = moment(new Date(minRangeRounded))\n  const maxDate = moment(new Date(maxRangeRounded))\n\n  return (\n    <div\n      className={styles.main}\n      style={{ opacity: visible ? 1 : 0 }}\n      onTouchStart={show.current}\n      onMouseMove={show.current}\n    >\n      <div className={styles.top}>\n        <NavLink to=\"/\" className={styles.back}>\n          <svg\n            viewBox=\"0 0 29 21\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M25 9.17424V11.8258H9.09091L16.3826 19.1174L14.5 21L4 10.5L14.5 0L16.3826 1.88258L9.09091 9.17424H25Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </NavLink>\n        <div className={styles.info}>\n          <span\n            className={styles.color}\n            style={{ backgroundColor: props.stream?.color }}\n          ></span>\n          <span className={styles.name}>{props.stream?.name}</span>\n        </div>\n      </div>\n      <div className={styles.timeline}>\n        <div className={styles.center}>\n          <div className={styles.timewrapper}>\n            <div\n              onClick={() => callbacks.current.sliderChange?.(0)}\n              className={styles.timeoffset}\n            >\n              {!contentShift ? (\n                <span className={styles.live}>Živě</span>\n              ) : (\n                formatTime(-contentShift)\n              )}\n            </div>\n\n            <div className={[styles.pill, styles.margin].join(\" \")}>\n              <input\n                className={styles.cover}\n                onChange={(e) => callbacks.current.timeChange?.(e.target.value)}\n                value={date.format(\"HH:mm\")}\n                min={minDate.format(\"HH:mm\")}\n                max={maxDate.format(\"HH:mm\")}\n                type=\"time\"\n              />\n              <span className={styles.time}>\n                {date.format(\"HH:mm:ss\")}\n              </span>\n            </div>\n          </div>\n          <div className={styles.pill}>\n            <input\n              className={styles.cover}\n              onChange={(e) =>\n                callbacks.current.dateChange?.(e.target.valueAsDate)\n              }\n              value={date.format(\"YYYY-MM-DD\")}\n              min={minDate.format(\"YYYY-MM-DD\")}\n              max={maxDate.format(\"YYYY-MM-DD\")}\n              type=\"date\"\n            />\n            <span className={styles.calendar}>\n              {date.format(\"DD. MMMM YYYY\")}\n            </span>\n          </div>\n        </div>\n      </div>\n      <Slider\n        onScroll={setScrollShift}\n        onScrollEnd={callbacks.current.sliderChange}\n        value={props.value}\n        color={props.stream.color}\n      />\n    </div>\n  )\n}\n","/** @jsxImportSource @emotion/react */\nimport { Component } from \"react\"\n\nimport { HLSPlayer } from \"components/HLSPlayer\"\nimport { Scrobber } from \"components/Scrobber/Scrobber\"\n\nimport { API_URL } from \"utils/constants\"\nimport { css } from \"@emotion/react\"\n\ntype Props = {\n  name: string\n  streams: {\n    key: string\n    name: string\n    color: string\n  }[]\n}\n\ntype State = {\n  from: number\n  to: number\n  shift: number\n  showTools: boolean\n}\n\nexport default class Camera extends Component<Props, State> {\n  state: State = {\n    from: 0,\n    to: 0,\n    shift: 0,\n    showTools: false,\n  }\n\n  generateUrl = ({\n    name,\n    from,\n    to,\n    shift,\n  }: {\n    name: string\n    from: number\n    to: number\n    shift: number\n  }): string | null => {\n    let baseUrl = `${API_URL}/data/${name}/`\n    let type = \"stream.m3u8\"\n\n    let params = []\n    if (from > 0) {\n      type = \"slice.m3u8\"\n      params.push(`from=${from}`)\n\n      if (to > 0 && from < to) {\n        params.push(`to=${to}`)\n      }\n    } else if (shift > 0) {\n      params.push(`shift=${Math.ceil(shift / 1000)}`)\n    }\n\n    baseUrl += type\n    if (params.length > 0) {\n      baseUrl += \"?\" + params.join(\"&\")\n    }\n\n    return baseUrl\n  }\n\n  componentWillUpdate(newProps: Props) {\n    if (this.props.name !== newProps.name) {\n      this.setState({ from: 0, to: 0, shift: 0 })\n    }\n  }\n\n  render() {\n    const { name, streams } = this.props\n    const { from, to, shift } = this.state\n    const url = this.generateUrl({ name, from, to, shift })\n\n    const stream = streams.find(({ key }) => key === name)\n\n    return (\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n\n          position: absolute;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n\n          background: #090909;\n\n          & > video {\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n            object-position: center;\n          }\n        `}\n      >\n        {url && <HLSPlayer source={url} />}\n        {stream && (\n          <Scrobber\n            onChange={(shift) => this.setState({ shift })}\n            value={shift}\n            stream={stream}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  RouteComponentProps,\n} from \"react-router-dom\"\n\nimport Home from \"./routes/Home/Home\"\nimport Camera from \"./routes/Camera/Camera\"\n\nimport { API_URL, COLORS } from \"./utils/constants\"\nimport DataContext from \"./utils/dataProvider\"\n\nexport default function App() {\n  const [streams, setStreams] = useState([])\n\n  useEffect(() => {\n    fetch(`${API_URL}/streams`)\n      .then((a) => a.json())\n      .then(({ data }) =>\n        setStreams(\n          data.map((item: any, index: number) => ({\n            ...item,\n            color: COLORS[index % COLORS.length],\n          }))\n        )\n      )\n  }, [])\n\n  return (\n    <Router>\n      <DataContext.Provider value={{ streams }}>\n        <div id=\"app\">\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            path=\"/camera/:name\"\n            render={({ match }: RouteComponentProps<{ name: string }>) => (\n              <Camera name={match.params.name} streams={streams} />\n            )}\n          />\n        </div>\n      </DataContext.Provider>\n    </Router>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}